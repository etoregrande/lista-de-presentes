/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Account {
    accessToken: string | null;
    accessTokenExpiresAt: Timestamp | null;
    accountId: string;
    createdAt: Timestamp;
    id: string;
    idToken: string | null;
    password: string | null;
    providerId: string;
    refreshToken: string | null;
    refreshTokenExpiresAt: Timestamp | null;
    scope: string | null;
    updatedAt: Timestamp;
    userId: string;
}

export interface Session {
    createdAt: Timestamp;
    expiresAt: Timestamp;
    id: string;
    ipAddress: string | null;
    token: string;
    updatedAt: Timestamp;
    userAgent: string | null;
    userId: string;
}

export interface User {
    createdAt: Timestamp;
    email: string;
    emailVerified: boolean;
    id: string;
    image: string | null;
    name: string;
    updatedAt: Timestamp;
}

export interface Verification {
    createdAt: Timestamp | null;
    expiresAt: Timestamp;
    id: string;
    identifier: string;
    updatedAt: Timestamp | null;
    value: string;
}

export interface WishlistItem {
    created_at: Generated<Timestamp | null>;
    description: string | null;
    id: Generated<string>;
    image: string | null;
    is_active: Generated<boolean | null>;
    is_purchased: Generated<boolean | null>;
    link: string | null;
    name: string;
    price: number | null;
    priority: Generated<string | null>;
    purchased_at: Timestamp | null;
    user_id: string | null;
}

export interface DB {
    account: Account;
    session: Session;
    user: User;
    verification: Verification;
    wishlist_item: WishlistItem;
}
