generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  createdAt     DateTime
  updatedAt     DateTime

  name          String
  email         String @unique
  emailVerified Boolean
  image         String?
  
  sessions      Session[]
  accounts      Account[]
  wishlistItems WishlistItem[] 

  @@map("users")
}

model Session {
  id        String   @id
  createdAt DateTime
  updatedAt DateTime

  expiresAt DateTime
  token     String @unique
  ipAddress String?
  userAgent String?
  
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Account {
  id                    String    @id
  createdAt             DateTime
  updatedAt             DateTime
  
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("accounts")
}

model Verification {
  id         String    @id
  createdAt  DateTime?
  updatedAt  DateTime?

  identifier String
  value      String
  expiresAt  DateTime

  @@map("verifications")
}

enum Priority {
  alta
  normal
  baixa
}

model WishlistItem {
  id           String    @id @default(uuid())
  name         String    @db.VarChar(255)
  price        Int?
  description  String?
  image        String?
  link         String?
  priority     Priority  @default(normal)
  isActive     Boolean   @default(true)     
  isPurchased  Boolean   @default(false)    
  purchasedAt  DateTime?                   
  createdAt    DateTime  @default(now())    
  userId       String                     
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("wishlist_items")
}

